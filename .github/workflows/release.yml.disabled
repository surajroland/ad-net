name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  PYTHON_VERSION: "3.12"

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        pip install -r requirements/dev.txt
        pip install -e .

    - name: Run full test suite
      run: |
        pytest tests/ --cov=src/adnet --cov-report=xml -v

    - name: Validate package structure
      run: |
        python -c "
        import adnet
        print(f'ADNet version: {adnet.__version__}')
        print('Package structure validation passed')
        "

    - name: Check changelog
      run: |
        if [ ! -f CHANGELOG.md ]; then
          echo "Warning: CHANGELOG.md not found"
        else
          echo "Changelog found"
        fi

  build-package:
    name: Build Package
    runs-on: ubuntu-latest
    needs: validate-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip build twine

    - name: Build source distribution
      run: |
        python -m build --sdist

    - name: Build wheel
      run: |
        python -m build --wheel

    - name: Check distribution
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  build-docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: validate-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          your-dockerhub-username/adnet
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name == 'push' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-package, build-docker]
    if: github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Generate release notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        ## 🚀 ADNet Release ${{ github.ref_name }}

        ### 📦 What's New
        - Advanced Driving Network (ADNet) dataset infrastructure
        - Multi-dataset harmonization and cross-dataset validation
        - Temporal sequence handling for 4D object detection
        - Support for nuScenes, Waymo, KITTI, and Argoverse datasets

        ### 🔧 Installation
        ```bash
        pip install adnet==${{ github.ref_name }}
        ```

        ### 📊 Dataset Support
        - ✅ nuScenes (6-camera surround view)
        - ✅ Waymo Open Dataset
        - ✅ KITTI (3D object detection)
        - ✅ Argoverse (HD maps + 3D tracking)

        ### 🧪 Testing
        This release includes comprehensive test coverage for:
        - Dataset loading and validation
        - Multi-dataset harmonization
        - Temporal sequence processing
        - Cross-dataset transfer evaluation

        ### 📝 Documentation
        - [Installation Guide](docs/installation.md)
        - [Dataset Tutorial](docs/tutorial.md)
        - [API Reference](docs/api.md)

        ### 🐛 Bug Fixes
        - Fixed namespace migration from sparse4d to adnet
        - Resolved camera calibration parameter handling
        - Improved test coverage and stability

        EOF

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ADNet ${{ github.ref_name }}
        body_path: release_notes.md
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/
        asset_name: adnet-${{ github.ref_name }}-dist.zip
        asset_content_type: application/zip

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: create-release
    if: github.event_name == 'push'
    environment: production

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        repository_url: https://upload.pypi.org/legacy/

  notify:
    name: Post-Release Notifications
    runs-on: ubuntu-latest
    needs: [create-release, publish-pypi]
    if: always()

    steps:
    - name: Notify success
      if: ${{ needs.create-release.result == 'success' && needs.publish-pypi.result == 'success' }}
      run: |
        echo "🎉 Release ${{ github.ref_name }} published successfully!"
        echo "📦 Available on PyPI: https://pypi.org/project/adnet/"
        echo "🐳 Docker images: docker pull your-username/adnet:${{ github.ref_name }}"

    - name: Notify failure
      if: ${{ needs.create-release.result == 'failure' || needs.publish-pypi.result == 'failure' }}
      run: |
        echo "❌ Release ${{ github.ref_name }} failed!"
        echo "Please check the workflow logs for details."
        exit 1
